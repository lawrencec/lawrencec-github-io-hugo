<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>design patterns on Just another Nodetraveller</title><link>https://blog.nodetraveller.com/tags/design-patterns/</link><description>Recent content in design patterns on Just another Nodetraveller</description><generator>Hugo -- gohugo.io</generator><language>en-gb</language><copyright>Copyright 2007-{year} Lawrence Carvalho. All rights reserved.</copyright><lastBuildDate>Sun, 25 Mar 2007 20:01:17 +0000</lastBuildDate><atom:link href="https://blog.nodetraveller.com/tags/design-patterns/index.xml" rel="self" type="application/rss+xml"/><item><title>JS Fun</title><link>https://blog.nodetraveller.com/post/source/js-fun/</link><pubDate>Sun, 25 Mar 2007 20:01:17 +0000</pubDate><guid>https://blog.nodetraveller.com/post/source/js-fun/</guid><description>For the last few months I&amp;rsquo;ve been playing around with different design patterns and methodologies in Javascript. I&amp;rsquo;ve been looking at the Composite pattern and also Aspects Oriented Programming (AOP).
AOP is a way of changing the behaviour of existing code without modifying it. It does this by providing, what AOP calls, advice at certain join points. In plain english, it provides a way of adding additional behaviour (advice) at certain points in your program (join points).</description></item><item><title>Design Patterns in Flash</title><link>https://blog.nodetraveller.com/post/source/design-patterns-in-flash/</link><pubDate>Sun, 14 Sep 2003 17:20:14 +0000</pubDate><guid>https://blog.nodetraveller.com/post/source/design-patterns-in-flash/</guid><description>Now Actionscript is OO, I thought it would be useful to try out implementing a design pattern in Flash. The pattern I chose is the Memento pattern, which is mainly used to implement &amp;ldquo;undo&amp;rdquo; functionality in applications. The reason I chose Memento is because its a pattern that uses interfaces and I wanted to explore this in AS 2.0. An interface is an object that defines methods but has no implementation.</description></item></channel></rss>